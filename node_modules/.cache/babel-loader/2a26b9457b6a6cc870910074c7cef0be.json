{"ast":null,"code":"import { __rest, __assign, __spreadArrays } from 'tslib';\nimport { warning, invariant } from 'hey-listen';\nimport { hex, rgba, hsla, complex, color } from 'style-value-types';\nimport sync, { cancelSync, getFrameData } from 'framesync';\nvar clamp = function (min, max, v) {\n  return Math.min(Math.max(v, min), max);\n};\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n  var _b = _a.duration,\n    duration = _b === void 0 ? 800 : _b,\n    _c = _a.bounce,\n    bounce = _c === void 0 ? 0.25 : _c,\n    _d = _a.velocity,\n    velocity = _d === void 0 ? 0 : _d,\n    _e = _a.mass,\n    mass = _e === void 0 ? 1 : _e;\n  var envelope;\n  var derivative;\n  warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n  var dampingRatio = 1 - bounce;\n  dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n  duration = clamp(minDuration, maxDuration, duration / 1000);\n  if (dampingRatio < 1) {\n    envelope = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var a = exponentialDecay - velocity;\n      var b = calcAngularFreq(undampedFreq, dampingRatio);\n      var c = Math.exp(-delta);\n      return safeMin - a / b * c;\n    };\n    derivative = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var d = delta * velocity + velocity;\n      var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n      var f = Math.exp(-delta);\n      var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n      var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n      return factor * ((d - e) * f) / g;\n    };\n  } else {\n    envelope = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (undampedFreq - velocity) * duration + 1;\n      return -safeMin + a * b;\n    };\n    derivative = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (velocity - undampedFreq) * (duration * duration);\n      return a * b;\n    };\n  }\n  var initialGuess = 5 / duration;\n  var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n  if (isNaN(undampedFreq)) {\n    return {\n      stiffness: 100,\n      damping: 10\n    };\n  } else {\n    var stiffness = Math.pow(undampedFreq, 2) * mass;\n    return {\n      stiffness: stiffness,\n      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness)\n    };\n  }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n  var result = initialGuess;\n  for (var i = 1; i < rootIterations; i++) {\n    result = result - envelope(result) / derivative(result);\n  }\n  return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n  return keys.some(function (key) {\n    return options[key] !== undefined;\n  });\n}\nfunction getSpringOptions(options) {\n  var springOptions = __assign({\n    velocity: 0.0,\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    isResolvedFromDuration: false\n  }, options);\n  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {\n    var derived = findSpring(options);\n    springOptions = __assign(__assign(__assign({}, springOptions), derived), {\n      velocity: 0.0,\n      mass: 1.0\n    });\n    springOptions.isResolvedFromDuration = true;\n  }\n  return springOptions;\n}\nfunction spring(_a) {\n  var _b = _a.from,\n    from = _b === void 0 ? 0.0 : _b,\n    _c = _a.to,\n    to = _c === void 0 ? 1.0 : _c,\n    _d = _a.restSpeed,\n    restSpeed = _d === void 0 ? 2 : _d,\n    restDelta = _a.restDelta,\n    options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n  var state = {\n    done: false,\n    value: from\n  };\n  var _e = getSpringOptions(options),\n    stiffness = _e.stiffness,\n    damping = _e.damping,\n    mass = _e.mass,\n    velocity = _e.velocity,\n    isResolvedFromDuration = _e.isResolvedFromDuration;\n  var resolveSpring = zero;\n  var resolveVelocity = zero;\n  function createSpring() {\n    var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    var initialDelta = to - from;\n    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n    if (dampingRatio < 1) {\n      var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t) + initialDelta * Math.cos(angularFreq_1 * t));\n      };\n      resolveVelocity = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t)) - envelope * (Math.cos(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t));\n      };\n    } else if (dampingRatio === 1) {\n      resolveSpring = function (t) {\n        return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n      };\n    } else {\n      var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n      };\n    }\n  }\n  createSpring();\n  return {\n    next: function (t) {\n      var current = resolveSpring(t);\n      if (!isResolvedFromDuration) {\n        var currentVelocity = resolveVelocity(t) * 1000;\n        var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n      } else {\n        state.done = t >= options.duration;\n      }\n      state.value = state.done ? to : current;\n      return state;\n    },\n    flipTarget: function () {\n      var _a;\n      velocity = -velocity;\n      _a = [to, from], from = _a[0], to = _a[1];\n      createSpring();\n    }\n  };\n}\nspring.needsInterpolation = function (a, b) {\n  return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) {\n  return 0;\n};\nvar progress = function (from, to, value) {\n  var toFromDifference = to - from;\n  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\nvar mix = function (from, to, progress) {\n  return -progress * from + progress * to + from;\n};\nvar mixLinearColor = function (from, to, v) {\n  var fromExpo = from * from;\n  var toExpo = to * to;\n  return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [hex, rgba, hsla];\nvar getColorType = function (v) {\n  return colorTypes.find(function (type) {\n    return type.test(v);\n  });\n};\nvar notAnimatable = function (color) {\n  return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n  var fromColorType = getColorType(from);\n  var toColorType = getColorType(to);\n  invariant(!!fromColorType, notAnimatable(from));\n  invariant(!!toColorType, notAnimatable(to));\n  invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n  var fromColor = fromColorType.parse(from);\n  var toColor = toColorType.parse(to);\n  var blended = __assign({}, fromColor);\n  var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n  return function (v) {\n    for (var key in blended) {\n      if (key !== 'alpha') {\n        blended[key] = mixFunc(fromColor[key], toColor[key], v);\n      }\n    }\n    blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n    return fromColorType.transform(blended);\n  };\n};\nvar zeroPoint = {\n  x: 0,\n  y: 0,\n  z: 0\n};\nvar isNum = function (v) {\n  return typeof v === 'number';\n};\nvar combineFunctions = function (a, b) {\n  return function (v) {\n    return b(a(v));\n  };\n};\nvar pipe = function () {\n  var transformers = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transformers[_i] = arguments[_i];\n  }\n  return transformers.reduce(combineFunctions);\n};\nfunction getMixer(origin, target) {\n  if (isNum(origin)) {\n    return function (v) {\n      return mix(origin, target, v);\n    };\n  } else if (color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\nvar mixArray = function (from, to) {\n  var output = __spreadArrays(from);\n  var numValues = output.length;\n  var blendValue = from.map(function (fromThis, i) {\n    return getMixer(fromThis, to[i]);\n  });\n  return function (v) {\n    for (var i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n    return output;\n  };\n};\nvar mixObject = function (origin, target) {\n  var output = __assign(__assign({}, origin), target);\n  var blendValue = {};\n  for (var key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n  return function (v) {\n    for (var key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n    return output;\n  };\n};\nfunction analyse(value) {\n  var parsed = complex.parse(value);\n  var numValues = parsed.length;\n  var numNumbers = 0;\n  var numRGB = 0;\n  var numHSL = 0;\n  for (var i = 0; i < numValues; i++) {\n    if (numNumbers || typeof parsed[i] === 'number') {\n      numNumbers++;\n    } else {\n      if (parsed[i].hue !== undefined) {\n        numHSL++;\n      } else {\n        numRGB++;\n      }\n    }\n  }\n  return {\n    parsed: parsed,\n    numNumbers: numNumbers,\n    numRGB: numRGB,\n    numHSL: numHSL\n  };\n}\nvar mixComplex = function (origin, target) {\n  var template = complex.createTransformer(target);\n  var originStats = analyse(origin);\n  var targetStats = analyse(target);\n  invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n  return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\nvar mixNumber = function (from, to) {\n  return function (p) {\n    return mix(from, to, p);\n  };\n};\nfunction detectMixerFactory(v) {\n  if (typeof v === 'number') {\n    return mixNumber;\n  } else if (typeof v === 'string') {\n    if (color.test(v)) {\n      return mixColor;\n    } else {\n      return mixComplex;\n    }\n  } else if (Array.isArray(v)) {\n    return mixArray;\n  } else if (typeof v === 'object') {\n    return mixObject;\n  }\n}\nfunction createMixers(output, ease, customMixer) {\n  var mixers = [];\n  var mixerFactory = customMixer || detectMixerFactory(output[0]);\n  var numMixers = output.length - 1;\n  for (var i = 0; i < numMixers; i++) {\n    var mixer = mixerFactory(output[i], output[i + 1]);\n    if (ease) {\n      var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n      mixer = pipe(easingFunction, mixer);\n    }\n    mixers.push(mixer);\n  }\n  return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n  var from = _a[0],\n    to = _a[1];\n  var mixer = _b[0];\n  return function (v) {\n    return mixer(progress(from, to, v));\n  };\n}\nfunction slowInterpolate(input, mixers) {\n  var inputLength = input.length;\n  var lastInputIndex = inputLength - 1;\n  return function (v) {\n    var mixerIndex = 0;\n    var foundMixerIndex = false;\n    if (v <= input[0]) {\n      foundMixerIndex = true;\n    } else if (v >= input[lastInputIndex]) {\n      mixerIndex = lastInputIndex - 1;\n      foundMixerIndex = true;\n    }\n    if (!foundMixerIndex) {\n      var i = 1;\n      for (; i < inputLength; i++) {\n        if (input[i] > v || i === lastInputIndex) {\n          break;\n        }\n      }\n      mixerIndex = i - 1;\n    }\n    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n    return mixers[mixerIndex](progressInRange);\n  };\n}\nfunction interpolate(input, output, _a) {\n  var _b = _a === void 0 ? {} : _a,\n    _c = _b.clamp,\n    isClamp = _c === void 0 ? true : _c,\n    ease = _b.ease,\n    mixer = _b.mixer;\n  var inputLength = input.length;\n  invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n  if (input[0] > input[inputLength - 1]) {\n    input = [].concat(input);\n    output = [].concat(output);\n    input.reverse();\n    output.reverse();\n  }\n  var mixers = createMixers(output, ease, mixer);\n  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n  return isClamp ? function (v) {\n    return interpolator(clamp(input[0], input[inputLength - 1], v));\n  } : interpolator;\n}\nvar reverseEasing = function (easing) {\n  return function (p) {\n    return 1 - easing(1 - p);\n  };\n};\nvar mirrorEasing = function (easing) {\n  return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n  };\n};\nvar createExpoIn = function (power) {\n  return function (p) {\n    return Math.pow(p, power);\n  };\n};\nvar createBackIn = function (power) {\n  return function (p) {\n    return p * p * ((power + 1) * p - power);\n  };\n};\nvar createAnticipate = function (power) {\n  var backEasing = createBackIn(power);\n  return function (p) {\n    return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n  };\n};\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) {\n  return p;\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reverseEasing(easeIn);\nvar easeInOut = /*#__PURE__*/mirrorEasing(easeIn);\nvar circIn = function (p) {\n  return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/reverseEasing(circIn);\nvar circInOut = /*#__PURE__*/mirrorEasing(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reverseEasing(backIn);\nvar backInOut = /*#__PURE__*/mirrorEasing(backIn);\nvar anticipate = /*#__PURE__*/createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n  if (p === 1 || p === 0) return p;\n  var p2 = p * p;\n  return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = /*#__PURE__*/reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n  return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\nfunction defaultEasing(values, easing) {\n  return values.map(function () {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n  var numValues = values.length;\n  return values.map(function (_value, i) {\n    return i !== 0 ? i / (numValues - 1) : 0;\n  });\n}\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(function (o) {\n    return o * duration;\n  });\n}\nfunction keyframes(_a) {\n  var _b = _a.from,\n    from = _b === void 0 ? 0 : _b,\n    _c = _a.to,\n    to = _c === void 0 ? 1 : _c,\n    ease = _a.ease,\n    offset = _a.offset,\n    _d = _a.duration,\n    duration = _d === void 0 ? 300 : _d;\n  var state = {\n    done: false,\n    value: from\n  };\n  var values = Array.isArray(to) ? to : [from, to];\n  var times = convertOffsetToTimes(offset !== null && offset !== void 0 ? offset : defaultOffset(values), duration);\n  function createInterpolator() {\n    return interpolate(times, values, {\n      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n    });\n  }\n  var interpolator = createInterpolator();\n  return {\n    next: function (t) {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: function () {\n      values.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\nfunction decay(_a) {\n  var _b = _a.velocity,\n    velocity = _b === void 0 ? 0 : _b,\n    _c = _a.from,\n    from = _c === void 0 ? 0 : _c,\n    _d = _a.power,\n    power = _d === void 0 ? 0.8 : _d,\n    _e = _a.timeConstant,\n    timeConstant = _e === void 0 ? 350 : _e,\n    _f = _a.restDelta,\n    restDelta = _f === void 0 ? 0.5 : _f,\n    modifyTarget = _a.modifyTarget;\n  var state = {\n    done: false,\n    value: from\n  };\n  var amplitude = power * velocity;\n  var ideal = from + amplitude;\n  var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n  if (target !== ideal) amplitude = target - from;\n  return {\n    next: function (t) {\n      var delta = -amplitude * Math.exp(-t / timeConstant);\n      state.done = !(delta > restDelta || delta < -restDelta);\n      state.value = state.done ? target : target + delta;\n      return state;\n    },\n    flipTarget: function () {}\n  };\n}\nvar types = {\n  keyframes: keyframes,\n  spring: spring,\n  decay: decay\n};\nfunction detectAnimationFromOptions(config) {\n  if (Array.isArray(config.to)) {\n    return keyframes;\n  } else if (types[config.type]) {\n    return types[config.type];\n  }\n  var keys = new Set(Object.keys(config));\n  if (keys.has(\"ease\") || keys.has(\"duration\") && !keys.has(\"dampingRatio\")) {\n    return keyframes;\n  } else if (keys.has(\"dampingRatio\") || keys.has(\"stiffness\") || keys.has(\"mass\") || keys.has(\"damping\") || keys.has(\"restSpeed\") || keys.has(\"restDelta\")) {\n    return spring;\n  }\n  return keyframes;\n}\nfunction loopElapsed(elapsed, duration, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  if (isForwardPlayback === void 0) {\n    isForwardPlayback = true;\n  }\n  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nvar framesync = function (update) {\n  var passTimestamp = function (_a) {\n    var delta = _a.delta;\n    return update(delta);\n  };\n  return {\n    start: function () {\n      return sync.update(passTimestamp, true, true);\n    },\n    stop: function () {\n      return cancelSync.update(passTimestamp);\n    }\n  };\n};\nfunction animate(_a) {\n  var _b, _c;\n  var from = _a.from,\n    _d = _a.autoplay,\n    autoplay = _d === void 0 ? true : _d,\n    _e = _a.driver,\n    driver = _e === void 0 ? framesync : _e,\n    _f = _a.elapsed,\n    elapsed = _f === void 0 ? 0 : _f,\n    _g = _a.repeat,\n    repeatMax = _g === void 0 ? 0 : _g,\n    _h = _a.repeatType,\n    repeatType = _h === void 0 ? \"loop\" : _h,\n    _j = _a.repeatDelay,\n    repeatDelay = _j === void 0 ? 0 : _j,\n    onPlay = _a.onPlay,\n    onStop = _a.onStop,\n    onComplete = _a.onComplete,\n    onRepeat = _a.onRepeat,\n    onUpdate = _a.onUpdate,\n    options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var animator = detectAnimationFromOptions(options);\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n  var animation = animator(__assign(__assign({}, options), {\n    from: from,\n    to: to\n  }));\n  function repeat() {\n    repeatCount++;\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n    if (!isComplete) {\n      var state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n    if (isComplete) {\n      if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n  autoplay && play();\n  return {\n    stop: function () {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\nfunction velocityPerSecond(velocity, frameDuration) {\n  return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\nfunction inertia(_a) {\n  var _b = _a.from,\n    from = _b === void 0 ? 0 : _b,\n    _c = _a.velocity,\n    velocity = _c === void 0 ? 0 : _c,\n    min = _a.min,\n    max = _a.max,\n    _d = _a.power,\n    power = _d === void 0 ? 0.8 : _d,\n    _e = _a.timeConstant,\n    timeConstant = _e === void 0 ? 750 : _e,\n    _f = _a.bounceStiffness,\n    bounceStiffness = _f === void 0 ? 500 : _f,\n    _g = _a.bounceDamping,\n    bounceDamping = _g === void 0 ? 10 : _g,\n    _h = _a.restDelta,\n    restDelta = _h === void 0 ? 1 : _h,\n    modifyTarget = _a.modifyTarget,\n    driver = _a.driver,\n    onUpdate = _a.onUpdate,\n    onComplete = _a.onComplete;\n  var currentAnimation;\n  function isOutOfBounds(v) {\n    return min !== undefined && v < min || max !== undefined && v > max;\n  }\n  function boundaryNearest(v) {\n    if (min === undefined) return max;\n    if (max === undefined) return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n  function startAnimation(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(__assign(__assign({}, options), {\n      driver: driver,\n      onUpdate: function (v) {\n        var _a;\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n      },\n      onComplete: onComplete\n    }));\n  }\n  function startSpring(options) {\n    startAnimation(__assign({\n      type: \"spring\",\n      stiffness: bounceStiffness,\n      damping: bounceDamping,\n      restDelta: restDelta\n    }, options));\n  }\n  if (isOutOfBounds(from)) {\n    startSpring({\n      from: from,\n      velocity: velocity,\n      to: boundaryNearest(from)\n    });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n    var boundary_1 = boundaryNearest(target);\n    var heading_1 = boundary_1 === min ? -1 : 1;\n    var prev_1;\n    var current_1;\n    var checkBoundary = function (v) {\n      prev_1 = current_1;\n      current_1 = v;\n      velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n      if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n        startSpring({\n          from: v,\n          to: boundary_1,\n          velocity: velocity\n        });\n      }\n    };\n    startAnimation({\n      type: \"decay\",\n      from: from,\n      velocity: velocity,\n      timeConstant: timeConstant,\n      power: power,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n    });\n  }\n  return {\n    stop: function () {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\nvar radiansToDegrees = function (radians) {\n  return radians * 180 / Math.PI;\n};\nvar angle = function (a, b) {\n  if (b === void 0) {\n    b = zeroPoint;\n  }\n  return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\nvar applyOffset = function (from, to) {\n  var hasReceivedFrom = true;\n  if (to === undefined) {\n    to = from;\n    hasReceivedFrom = false;\n  }\n  return function (v) {\n    if (hasReceivedFrom) {\n      return v - from + to;\n    } else {\n      from = v;\n      hasReceivedFrom = true;\n      return to;\n    }\n  };\n};\nvar identity = function (v) {\n  return v;\n};\nvar createAttractor = function (alterDisplacement) {\n  if (alterDisplacement === void 0) {\n    alterDisplacement = identity;\n  }\n  return function (constant, origin, v) {\n    var displacement = origin - v;\n    var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n    return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n  };\n};\nvar attract = /*#__PURE__*/createAttractor();\nvar attractExpo = /*#__PURE__*/createAttractor(Math.sqrt);\nvar degreesToRadians = function (degrees) {\n  return degrees * Math.PI / 180;\n};\nvar isPoint = function (point) {\n  return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\nvar isPoint3D = function (point) {\n  return isPoint(point) && point.hasOwnProperty('z');\n};\nvar distance1D = function (a, b) {\n  return Math.abs(a - b);\n};\nfunction distance(a, b) {\n  if (isNum(a) && isNum(b)) {\n    return distance1D(a, b);\n  } else if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n  }\n}\nvar pointFromVector = function (origin, angle, distance) {\n  angle = degreesToRadians(angle);\n  return {\n    x: distance * Math.cos(angle) + origin.x,\n    y: distance * Math.sin(angle) + origin.y\n  };\n};\nvar toDecimal = function (num, precision) {\n  if (precision === void 0) {\n    precision = 2;\n  }\n  precision = Math.pow(10, precision);\n  return Math.round(num * precision) / precision;\n};\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n  if (smoothing === void 0) {\n    smoothing = 0;\n  }\n  return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\nvar smooth = function (strength) {\n  if (strength === void 0) {\n    strength = 50;\n  }\n  var previousValue = 0;\n  var lastUpdated = 0;\n  return function (v) {\n    var currentFramestamp = getFrameData().timestamp;\n    var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n    var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n    lastUpdated = currentFramestamp;\n    previousValue = newValue;\n    return newValue;\n  };\n};\nvar snap = function (points) {\n  if (typeof points === 'number') {\n    return function (v) {\n      return Math.round(v / points) * points;\n    };\n  } else {\n    var i_1 = 0;\n    var numPoints_1 = points.length;\n    return function (v) {\n      var lastDistance = Math.abs(points[0] - v);\n      for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n        var point = points[i_1];\n        var distance = Math.abs(point - v);\n        if (distance === 0) return point;\n        if (distance > lastDistance) return points[i_1 - 1];\n        if (i_1 === numPoints_1 - 1) return point;\n        lastDistance = distance;\n      }\n    };\n  }\n};\nfunction velocityPerFrame(xps, frameDuration) {\n  return xps / (1000 / frameDuration);\n}\nvar wrap = function (min, max, v) {\n  var rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\nvar a = function (a1, a2) {\n  return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n  return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n  return 3.0 * a1;\n};\nvar calcBezier = function (t, a1, a2) {\n  return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n  return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  var currentX;\n  var currentT;\n  var i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n  return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (var i = 0; i < newtonIterations; ++i) {\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n  return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n  if (mX1 === mY1 && mX2 === mY2) return linear;\n  var sampleValues = new Float32Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n  function getTForX(aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= newtonMinSlope) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n  return function (t) {\n    return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n  };\n}\nvar steps = function (steps, direction) {\n  if (direction === void 0) {\n    direction = 'end';\n  }\n  return function (progress) {\n    progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n    var expanded = progress * steps;\n    var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n  };\n};\nexport { angle, animate, anticipate, applyOffset, attract, attractExpo, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, clamp, createAnticipate, createAttractor, createBackIn, createExpoIn, cubicBezier, decay, degreesToRadians, distance, easeIn, easeInOut, easeOut, inertia, interpolate, isPoint, isPoint3D, keyframes, linear, mirrorEasing, mix, mixColor, mixComplex, pipe, pointFromVector, progress, radiansToDegrees, reverseEasing, smooth, smoothFrame, snap, spring, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap };","map":{"version":3,"names":["__rest","__assign","__spreadArrays","warning","invariant","hex","rgba","hsla","complex","color","sync","cancelSync","getFrameData","clamp","min","max","v","Math","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","_a","_b","duration","_c","bounce","_d","velocity","_e","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","factor","initialGuess","approximateRoot","isNaN","stiffness","damping","sqrt","rootIterations","result","i","durationKeys","physicsKeys","isSpringType","options","keys","some","key","undefined","getSpringOptions","springOptions","isResolvedFromDuration","derived","spring","from","to","restSpeed","restDelta","state","done","value","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","abs","angularFreq_1","t","sin","cos","dampedAngularFreq_1","freqForT","sinh","cosh","next","current","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","progress","toFromDifference","mix","mixLinearColor","fromExpo","toExpo","colorTypes","getColorType","find","type","test","notAnimatable","mixColor","fromColorType","toColorType","transform","fromColor","parse","toColor","blended","mixFunc","alpha","zeroPoint","x","y","z","isNum","combineFunctions","pipe","transformers","_i","arguments","length","reduce","getMixer","origin","target","mixComplex","mixArray","output","numValues","blendValue","map","fromThis","mixObject","analyse","parsed","numNumbers","numRGB","numHSL","hue","template","createTransformer","originStats","targetStats","mixNumber","p","detectMixerFactory","Array","isArray","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","fastInterpolate","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","isClamp","concat","reverse","interpolator","reverseEasing","easing","mirrorEasing","createExpoIn","power","createBackIn","createAnticipate","backEasing","DEFAULT_OVERSHOOT_STRENGTH","BOUNCE_FIRST_THRESHOLD","BOUNCE_SECOND_THRESHOLD","BOUNCE_THIRD_THRESHOLD","linear","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","backIn","backOut","backInOut","anticipate","ca","cb","cc","bounceOut","p2","bounceIn","bounceInOut","defaultEasing","values","splice","defaultOffset","_value","convertOffsetToTimes","offset","o","keyframes","times","createInterpolator","decay","timeConstant","_f","modifyTarget","amplitude","ideal","types","detectAnimationFromOptions","config","Set","Object","has","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","start","stop","animate","autoplay","driver","_g","repeat","repeatMax","_h","repeatType","_j","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","repeatCount","computedDuration","latest","isComplete","interpolateFromNumber","animator","call","animation","complete","play","velocityPerSecond","frameDuration","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary_1","heading_1","prev_1","current_1","checkBoundary","radiansToDegrees","radians","PI","angle","atan2","applyOffset","hasReceivedFrom","identity","createAttractor","alterDisplacement","constant","displacement","springModifiedDisplacement","attract","attractExpo","degreesToRadians","degrees","isPoint","point","hasOwnProperty","isPoint3D","distance1D","distance","xDelta","yDelta","zDelta","pointFromVector","toDecimal","num","precision","round","smoothFrame","prevValue","nextValue","smoothing","smooth","strength","previousValue","lastUpdated","currentFramestamp","timestamp","timeDelta","newValue","snap","points","i_1","numPoints_1","lastDistance","velocityPerFrame","xps","wrap","rangeSize","a1","a2","calcBezier","getSlope","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonIterations","newtonMinSlope","newtonRaphsonIterate","aGuessT","currentSlope","kSplineTableSize","kSampleStepSize","cubicBezier","mY1","mY2","sampleValues","Float32Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","steps","direction","expanded","rounded","floor","ceil"],"sources":["/Users/nicholas/Documents/Toronto/Cantek/Cantek Web Dev course/lesson 2/new-portfolio-main/node_modules/popmotion/dist/popmotion.es.js"],"sourcesContent":["import { __rest, __assign, __spreadArrays } from 'tslib';\nimport { warning, invariant } from 'hey-listen';\nimport { hex, rgba, hsla, complex, color } from 'style-value-types';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nvar clamp = function (min, max, v) {\n    return Math.min(Math.max(v, min), max);\n};\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n    var _b = _a.duration,\n        duration = _b === void 0 ? 800 : _b,\n        _c = _a.bounce,\n        bounce = _c === void 0 ? 0.25 : _c,\n        _d = _a.velocity,\n        velocity = _d === void 0 ? 0 : _d,\n        _e = _a.mass,\n        mass = _e === void 0 ? 1 : _e;\n    var envelope;\n    var derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    var dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var a = exponentialDecay - velocity;\n            var b = calcAngularFreq(undampedFreq, dampingRatio);\n            var c = Math.exp(-delta);\n            return safeMin - a / b * c;\n        };\n        derivative = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var d = delta * velocity + velocity;\n            var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            var f = Math.exp(-delta);\n            var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return factor * ((d - e) * f) / g;\n        };\n    } else {\n        envelope = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    var initialGuess = 5 / duration;\n    var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10\n        };\n    } else {\n        var stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness: stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness)\n        };\n    }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    var result = initialGuess;\n    for (var i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some(function (key) {\n        return options[key] !== undefined;\n    });\n}\nfunction getSpringOptions(options) {\n    var springOptions = __assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {\n        var derived = findSpring(options);\n        springOptions = __assign(__assign(__assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0.0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1.0 : _c,\n        _d = _a.restSpeed,\n        restSpeed = _d === void 0 ? 2 : _d,\n        restDelta = _a.restDelta,\n        options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    var state = { done: false, value: from };\n    var _e = getSpringOptions(options),\n        stiffness = _e.stiffness,\n        damping = _e.damping,\n        mass = _e.mass,\n        velocity = _e.velocity,\n        isResolvedFromDuration = _e.isResolvedFromDuration;\n    var resolveSpring = zero;\n    var resolveVelocity = zero;\n    function createSpring() {\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var initialDelta = to - from;\n        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n        if (dampingRatio < 1) {\n            var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t) + initialDelta * Math.cos(angularFreq_1 * t));\n            };\n            resolveVelocity = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t)) - envelope * (Math.cos(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t));\n            };\n        } else if (dampingRatio === 1) {\n            resolveSpring = function (t) {\n                return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n            };\n        } else {\n            var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n                return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: function (t) {\n            var current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                var currentVelocity = resolveVelocity(t) * 1000;\n                var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            } else {\n                state.done = t >= options.duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: function () {\n            var _a;\n            velocity = -velocity;\n            _a = [to, from], from = _a[0], to = _a[1];\n            createSpring();\n        }\n    };\n}\nspring.needsInterpolation = function (a, b) {\n    return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) {\n    return 0;\n};\n\nvar progress = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n    return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [hex, rgba, hsla];\nvar getColorType = function (v) {\n    return colorTypes.find(function (type) {\n        return type.test(v);\n    });\n};\nvar notAnimatable = function (color) {\n    return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n    var fromColorType = getColorType(from);\n    var toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n    var fromColor = fromColorType.parse(from);\n    var toColor = toColorType.parse(to);\n    var blended = __assign({}, fromColor);\n    var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n    return function (v) {\n        for (var key in blended) {\n            if (key !== 'alpha') {\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nvar zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar isNum = function (v) {\n    return typeof v === 'number';\n};\n\nvar combineFunctions = function (a, b) {\n    return function (v) {\n        return b(a(v));\n    };\n};\nvar pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return function (v) {\n            return mix(origin, target, v);\n        };\n    } else if (color.test(origin)) {\n        return mixColor(origin, target);\n    } else {\n        return mixComplex(origin, target);\n    }\n}\nvar mixArray = function (from, to) {\n    var output = __spreadArrays(from);\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) {\n        return getMixer(fromThis, to[i]);\n    });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nvar mixObject = function (origin, target) {\n    var output = __assign(__assign({}, origin), target);\n    var blendValue = {};\n    for (var key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return function (v) {\n        for (var key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    var parsed = complex.parse(value);\n    var numValues = parsed.length;\n    var numNumbers = 0;\n    var numRGB = 0;\n    var numHSL = 0;\n    for (var i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === 'number') {\n            numNumbers++;\n        } else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            } else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\n}\nvar mixComplex = function (origin, target) {\n    var template = complex.createTransformer(target);\n    var originStats = analyse(origin);\n    var targetStats = analyse(target);\n    invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar mixNumber = function (from, to) {\n    return function (p) {\n        return mix(from, to, p);\n    };\n};\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    } else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        } else {\n            return mixComplex;\n        }\n    } else if (Array.isArray(v)) {\n        return mixArray;\n    } else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    var mixers = [];\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\n    var numMixers = output.length - 1;\n    for (var i = 0; i < numMixers; i++) {\n        var mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n    var from = _a[0],\n        to = _a[1];\n    var mixer = _b[0];\n    return function (v) {\n        return mixer(progress(from, to, v));\n    };\n}\nfunction slowInterpolate(input, mixers) {\n    var inputLength = input.length;\n    var lastInputIndex = inputLength - 1;\n    return function (v) {\n        var mixerIndex = 0;\n        var foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        } else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            var i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.clamp,\n        isClamp = _c === void 0 ? true : _c,\n        ease = _b.ease,\n        mixer = _b.mixer;\n    var inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    var mixers = createMixers(output, ease, mixer);\n    var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n    return isClamp ? function (v) {\n        return interpolator(clamp(input[0], input[inputLength - 1], v));\n    } : interpolator;\n}\n\nvar reverseEasing = function (easing) {\n    return function (p) {\n        return 1 - easing(1 - p);\n    };\n};\nvar mirrorEasing = function (easing) {\n    return function (p) {\n        return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n    };\n};\nvar createExpoIn = function (power) {\n    return function (p) {\n        return Math.pow(p, power);\n    };\n};\nvar createBackIn = function (power) {\n    return function (p) {\n        return p * p * ((power + 1) * p - power);\n    };\n};\nvar createAnticipate = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) {\n    return p;\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reverseEasing(easeIn);\nvar easeInOut = /*#__PURE__*/mirrorEasing(easeIn);\nvar circIn = function (p) {\n    return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/reverseEasing(circIn);\nvar circInOut = /*#__PURE__*/mirrorEasing(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reverseEasing(backIn);\nvar backInOut = /*#__PURE__*/mirrorEasing(backIn);\nvar anticipate = /*#__PURE__*/createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    if (p === 1 || p === 0) return p;\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = /*#__PURE__*/reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n    return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n    return values.map(function () {\n        return easing || easeInOut;\n    }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    var numValues = values.length;\n    return values.map(function (_value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map(function (o) {\n        return o * duration;\n    });\n}\nfunction keyframes(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1 : _c,\n        ease = _a.ease,\n        offset = _a.offset,\n        _d = _a.duration,\n        duration = _d === void 0 ? 300 : _d;\n    var state = { done: false, value: from };\n    var values = Array.isArray(to) ? to : [from, to];\n    var times = convertOffsetToTimes(offset !== null && offset !== void 0 ? offset : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n        });\n    }\n    var interpolator = createInterpolator();\n    return {\n        next: function (t) {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: function () {\n            values.reverse();\n            interpolator = createInterpolator();\n        }\n    };\n}\n\nfunction decay(_a) {\n    var _b = _a.velocity,\n        velocity = _b === void 0 ? 0 : _b,\n        _c = _a.from,\n        from = _c === void 0 ? 0 : _c,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 350 : _e,\n        _f = _a.restDelta,\n        restDelta = _f === void 0 ? 0.5 : _f,\n        modifyTarget = _a.modifyTarget;\n    var state = { done: false, value: from };\n    var amplitude = power * velocity;\n    var ideal = from + amplitude;\n    var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal) amplitude = target - from;\n    return {\n        next: function (t) {\n            var delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: function () {}\n    };\n}\n\nvar types = { keyframes: keyframes, spring: spring, decay: decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    } else if (types[config.type]) {\n        return types[config.type];\n    }\n    var keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") || keys.has(\"duration\") && !keys.has(\"dampingRatio\")) {\n        return keyframes;\n    } else if (keys.has(\"dampingRatio\") || keys.has(\"stiffness\") || keys.has(\"mass\") || keys.has(\"damping\") || keys.has(\"restSpeed\") || keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    if (isForwardPlayback === void 0) {\n        isForwardPlayback = true;\n    }\n    return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () {\n            return sync.update(passTimestamp, true, true);\n        },\n        stop: function () {\n            return cancelSync.update(passTimestamp);\n        }\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var from = _a.from,\n        _d = _a.autoplay,\n        autoplay = _d === void 0 ? true : _d,\n        _e = _a.driver,\n        driver = _e === void 0 ? framesync : _e,\n        _f = _a.elapsed,\n        elapsed = _f === void 0 ? 0 : _f,\n        _g = _a.repeat,\n        repeatMax = _g === void 0 ? 0 : _g,\n        _h = _a.repeatType,\n        repeatType = _h === void 0 ? \"loop\" : _h,\n        _j = _a.repeatDelay,\n        repeatDelay = _j === void 0 ? 0 : _j,\n        onPlay = _a.onPlay,\n        onStop = _a.onStop,\n        onComplete = _a.onComplete,\n        onRepeat = _a.onRepeat,\n        onUpdate = _a.onUpdate,\n        options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = animator(__assign(__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        } else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\") animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback) delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            var state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            } else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        }\n    };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.velocity,\n        velocity = _c === void 0 ? 0 : _c,\n        min = _a.min,\n        max = _a.max,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 750 : _e,\n        _f = _a.bounceStiffness,\n        bounceStiffness = _f === void 0 ? 500 : _f,\n        _g = _a.bounceDamping,\n        bounceDamping = _g === void 0 ? 10 : _g,\n        _h = _a.restDelta,\n        restDelta = _h === void 0 ? 1 : _h,\n        modifyTarget = _a.modifyTarget,\n        driver = _a.driver,\n        onUpdate = _a.onUpdate,\n        onComplete = _a.onComplete;\n    var currentAnimation;\n    function isOutOfBounds(v) {\n        return min !== undefined && v < min || max !== undefined && v > max;\n    }\n    function boundaryNearest(v) {\n        if (min === undefined) return max;\n        if (max === undefined) return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(__assign(__assign({}, options), { driver: driver, onUpdate: function (v) {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete: onComplete }));\n    }\n    function startSpring(options) {\n        startAnimation(__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n    } else {\n        var target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n        var boundary_1 = boundaryNearest(target);\n        var heading_1 = boundary_1 === min ? -1 : 1;\n        var prev_1;\n        var current_1;\n        var checkBoundary = function (v) {\n            prev_1 = current_1;\n            current_1 = v;\n            velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n            if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n                startSpring({ from: v, to: boundary_1, velocity: velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from: from,\n            velocity: velocity,\n            timeConstant: timeConstant,\n            power: power,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n        });\n    }\n    return {\n        stop: function () {\n            return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        }\n    };\n}\n\nvar radiansToDegrees = function (radians) {\n    return radians * 180 / Math.PI;\n};\n\nvar angle = function (a, b) {\n    if (b === void 0) {\n        b = zeroPoint;\n    }\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n    var hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    return function (v) {\n        if (hasReceivedFrom) {\n            return v - from + to;\n        } else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\n\nvar identity = function (v) {\n    return v;\n};\nvar createAttractor = function (alterDisplacement) {\n    if (alterDisplacement === void 0) {\n        alterDisplacement = identity;\n    }\n    return function (constant, origin, v) {\n        var displacement = origin - v;\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n        return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n    };\n};\nvar attract = /*#__PURE__*/createAttractor();\nvar attractExpo = /*#__PURE__*/createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) {\n    return degrees * Math.PI / 180;\n};\n\nvar isPoint = function (point) {\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n    return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) {\n    return Math.abs(a - b);\n};\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    } else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n    angle = degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\n\nvar toDecimal = function (num, precision) {\n    if (precision === void 0) {\n        precision = 2;\n    }\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n    if (smoothing === void 0) {\n        smoothing = 0;\n    }\n    return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n    if (strength === void 0) {\n        strength = 50;\n    }\n    var previousValue = 0;\n    var lastUpdated = 0;\n    return function (v) {\n        var currentFramestamp = getFrameData().timestamp;\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\n\nvar snap = function (points) {\n    if (typeof points === 'number') {\n        return function (v) {\n            return Math.round(v / points) * points;\n        };\n    } else {\n        var i_1 = 0;\n        var numPoints_1 = points.length;\n        return function (v) {\n            var lastDistance = Math.abs(points[0] - v);\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n                var point = points[i_1];\n                var distance = Math.abs(point - v);\n                if (distance === 0) return point;\n                if (distance > lastDistance) return points[i_1 - 1];\n                if (i_1 === numPoints_1 - 1) return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n    return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n    var rangeSize = max - min;\n    return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar a = function (a1, a2) {\n    return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n    return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n    return 3.0 * a1;\n};\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        } else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n    return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < newtonIterations; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2) return linear;\n    var sampleValues = new Float32Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function (t) {\n        return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n    };\n}\n\nvar steps = function (steps, direction) {\n    if (direction === void 0) {\n        direction = 'end';\n    }\n    return function (progress) {\n        progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n        var expanded = progress * steps;\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n        return clamp(0, 1, rounded / steps);\n    };\n};\n\nexport { angle, animate, anticipate, applyOffset, attract, attractExpo, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, clamp, createAnticipate, createAttractor, createBackIn, createExpoIn, cubicBezier, decay, degreesToRadians, distance, easeIn, easeInOut, easeOut, inertia, interpolate, isPoint, isPoint3D, keyframes, linear, mirrorEasing, mix, mixColor, mixComplex, pipe, pointFromVector, progress, radiansToDegrees, reverseEasing, smooth, smoothFrame, snap, spring, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}